/*
 *
 * stereopticon ðŸ“½ reveal.js theme
 *
 */


// Default mixins and settings -----------------
@import "../template/mixins.scss";
@import "../template/settings.scss";
// ---------------------------------------------

// My custom stuff (overides some reveal settings)
@import "css/theme/source/stereopticon-fonts.scss";
@import "css/theme/source/stereopticon-variables.scss";
@import "css/theme/source/stereopticon-helpers.scss";
@import "css/theme/source/stereopticon-commons.scss";
// ---------------------------------------------

// Theme template ------------------------------
@import "../template/theme.scss";
// ---------------------------------------------

.reveal {

    // Copy pasted from asciidoctor stylesheet
    table.linenotable {
        border-collapse: separate;
        border: 0;
        background: none;
        margin: 0
    }

    table.linenotable td[class] {
        color: inherit;
        vertical-align: top;
        padding: 0;
        line-height: inherit;
        white-space: normal;
    }

    table.linenotable td.code {
        padding-left: 0.75em;
    }

    table.linenotable td.linenos {
        border-right: 1px solid currentColor;
        opacity: 0.35;
        padding-right: 0.25em;
    }

    // End paste

    // Better constraint on code blocks height
    pre code {
        max-height: 800px;
    }

    font-weight: $font-weight;
    font-size: $mainFontSize;

    strong,
    b {
        font-weight: $font-weight-strong;
    }

    h1 {
        margin-left: 50px;
        margin-right: 50px;
    }

    h1,
    h2,
    h3 {
        font-weight: normal;
    }

    h1,
    h3,
    p,
    ul,
    ol,
    table {
        margin-bottom: 0;
    }

    h3,
    p {
        margin-left: 0;
        margin-right: 0;
    }

    p,
    ul,
    ol,
    div,
    table {
        margin-top: $blockMargin;
    }

    // When something is the first element, no upper margin
    // except for tables, with the current implem
    h2+*:not(table),
    *:not(table):not(section):not(.slides):first-child {
        margin-top: 0;
        // XXX: What was this for?
        // & > h3 {
        //     margin-top: 0;
        // }
    }

    h3 {
        margin-top: calc(#{$blockMargin} + 20px);
    }

    div.title {
        @extend h3;
    }

    div.block>div.title {
        margin-top: unset;
    }

    div.imageblock+div.title {
        margin-top: unset;
    }

    div.imageblock.text-center+div.title {
        text-align: center;
    }

    div.imageblock.center+div.title {
        text-align: center;
    }

    div.imageblock[style='text-align: center']+div.title {
        text-align: center;
    }



    // Share style between quotes and verses
    %citationArea {
        width: 90%;
        margin: $blockMargin auto;
    }

    %citations {
        @extend %citationArea;
        border-left: 5px solid;
        padding-left: 20px;
        text-align: left;
        font-family: $mainFont;

        &>p {
            margin: 0;
        }
    }

    %attributions {
        @extend %citationArea;
        font-size: $smallerFontSize;
    }

    blockquote {
        @extend %citations;
        padding-left: 50px;

        &::before {
            content: "Â«";
            position: absolute;
            left: 7px;
            line-height: 40px;
            font-size: $biggerFontSize;
            font-weight: $font-weight-strong;
        }
    }

    .quoteblock {
        .attribution {
            @extend %attributions;
            text-align: right;
        }
    }

    // Asciidoc verse block
    .verseblock {

        // Override default "pre" style in case of adoc verse
        pre {
            @extend %citations;
            box-shadow: 0px 0px;
            font-size: $mainFontSize;
        }

        .attribution {
            @extend %attributions;
        }
    }

    li {
        margin: 0;
    }

    li:not(:first-of-type) {
        margin-top: 10px;
    }

    // Regular lists are squares
    ul {
        list-style-type: square;
    }

    ul,
    ol {

        // No top margin when a list is inside a list
        ul,
        ol {
            margin-top: 0;
        }

        // Sublists have circles
        ul {
            list-style-type: circle;
        }
    }

    ol {
        list-style: none;
        counter-reset: mycounter;
    }

    ol>li {
        list-style-type: none;
        position: relative;
        padding-left: 0px;
    }

    // Numbered lists are squares with numbers
    ol>li:before {
        //line-height: 28px; //required?
        content: counter(mycounter);
        counter-increment: mycounter;
        position: absolute;
        top: 13px;
        left: -50px;
        width: 35px;
        height: 35px;
        text-align: center;
        font-size: 25px;
        font-weight: $font-weight-strong;
    }

    // XXX What was that for?
    // code:not(.hljs):not(.rouge) {
    //     font-size: calc(#{$mainFontSize} * 0.9);
    // }

    pre //,code:not(.hljs) 

        {
        font-size: $smallerFontSize;
        box-shadow: 0px 0px;
    }

    // Adoc code callouts (ie. refs to elements in the code)
    code.hljs {
        b {
            font-family: $mainFont;
            font-weight: $font-weight-strong;
        }
    }

    ::selection {
        background: $text-on-light2;
        color: $light;
    }

    .slide-number {
        bottom: 60px;
        right: 80px;
        font-size: 25pt;
        background-color: $primary-transparent;
        color: $text-on-dark;
    }

    aside.controls {
        bottom: 50px;
        right: 200px;
    }

    div.admonitionblock {
        table {
            tbody tr td.icon {
                width: 0px;
            }

            width: 100%;
            text-align: left;
            background-color: $block-color;
        }
    }




    /*
     * Now we define things based on the type of slide (regular or impact, mostly)
     * For instance, everything color-related is defined in this part.
     */
    .slides {
        top: 0px;

        section {
            img {
                margin-bottom: 0;
            }
        }

        // For all slides (regular, title, impact)
        section:not([class^="stack"]) {
            // Vertical center alignment of slide content
            // Only works if revealjs is configured with Â«display: 'flex'Â»
            justify-content: center;
            flex-direction: column;
            padding-bottom: 0px;

            img {
                border-style: none;
                box-shadow: unset;
                background: none;
                border: none;
            }
        }

        // Regular slides
        section:not([class^="stack"]):not(.impact):not(.title) {
            background-color: $light;
            padding-left: $margin-left;
            padding-right: $margin-right;
            padding-top: $title-bar-offset; // half of the h2 bar height

            // Left alignment of slide content
            text-align: left;

            // Make sure "section" is the complete slide
            height: calc(100% - (#{$title-bar-offset}));
            width: calc(100% - (#{$margin-left} + #{$margin-right}));

            // Slide title, which is with dark background
            h2 {
                @extend %commonslidetitle;
                top: 0;
                padding: 0.5em;
                padding-bottom: 20px;
                z-index: 1;
            }

            b,
            strong {
                color: $colored-on-light;
            }

            //.reveal pre code

            code pre {
                margin: 0px;
            }

            // Code blocks
            pre:not(.content) {

                //background: $block-color;
                code:not(.hljs) {
                    color: $text-on-light;
                }
            }

            pre:not(.highlight) {
                padding: 5px;
            }

            // Code inline text
            code:not(.hljs) {
                color: $text-on-light2;
            }

            // Code callouts in adoc
            code.hljs {
                b {
                    color: $colored-on-dark;

                    .hljs-number {
                        color: $colored-on-dark;
                    }
                }
            }

            a {
                color: $colored-on-light2;
            }

            a:hover {
                color: lighten($colored-on-light2, 10%);
            }

            h3,
            p,
            ul,
            ol,
            blockquote {
                color: $text-on-light;
            }

            // Items of ordered lists are numbers in squares,
            // hence we invert colors
            ol>li:before {
                color: $text-on-dark;
                background: $dark;
            }
        }

        // Title and impact slides (dark background, so we adapt everything)
        section.title,
        section.impact {
            @extend %commondarkbackground;
            height: 100%;
            padding-top: 0px;
            vertical-align: middle;
            text-align: center;

            h1,
            h2,
            h3 {
                color: $text-on-dark;
            }
        }
    }
}

// end .reveal