// Default mixins and settings -----------------
@import "../template/mixins";
@import "../template/settings";
// ---------------------------------------------

// My custom stuff (overides some reveal settings)
@import "./stereopticon-fonts.scss";
@import "./stereopticon-variables.scss";
@import "./stereopticon-helpers.scss";

// Theme template ------------------------------
@import "../template/theme";
// ---------------------------------------------

.reveal {
    font-weight: $font-weight;
    font-size: $mainFontSize;

    strong,
    b {
        font-weight: $font-weight-strong;
    }

    h1,
    h2,
    h3 {
        font-weight: normal;
    }

    h1,
    h3,
    p,
    ul,
    ol {
        margin-bottom: 0;
    }

    p,
    ul,
    ol,
    .columns,
    .block {
        margin-top: $blockMargin;
    }

    h3,
    p {
        margin-left: 0;
        margin-right: 0;
    }

    h3 {
        margin-top: calc(#{$blockMargin} + 20px);
    }

    // When something is the first element, no upper margin
    // except for tables, with the current implem
    h2 + *:not(table),
    *:not(table):first-child {
        margin-top: 0;
    }

    // Share style between quotes and verses
    %citations {
        border-left: 5px solid;
        padding-left: 20px;
        text-align: left;
        font-size: 1em;
        & > p {
            margin: 0;
        }
    }

    blockquote {
        @extend %citations;
        width: 90%;
        margin: $blockMargin auto;
        padding-left: 50px;

        &::before {
            content: "«";
            position: absolute;
            left: 7px;
            line-height: 40px;
            font-size: 1.4em;
            font-weight: $font-weight-strong;
        }
    }

    .quoteblock {
        .attribution {
            width: 90%;
            font-size: .85em;
            margin: $blockMargin auto;
            text-align: right;
        }
    }

    // Asciidoc verse block
    .verseblock {
        pre {
            // Override default "pre" style in case of adoc verse
            @extend %citations;

            display: block;
            position: relative;
            width: 90%;
            margin: $blockMargin auto;

            text-align: left;

            font-family: $mainFont;
            line-height: 1.2em;

            word-wrap: break-word;

            box-shadow: 0px 0px;
        }

        .attribution {
            width: 90%;
            margin: $blockMargin auto;
            font-size: .85em;
        }
    }

    

    // Regular lists are squares
    ul {
        list-style-type: square;
    }

    ul,
    ol {
        // No top margin when a list is inside a list
        ul,
        ol {
            margin-top: 0;
        }

        // Sublists have circles
        ul {
            list-style-type: circle;
        }
    }

    ol {
        list-style: none;
        counter-reset: mycounter;
    }

    li {
        margin-bottom: 0.25em;
        margin: 0;
    }

    ol > li {
        position: relative;
        padding-left: 0px;
    }

    // Numbered lists are squares with numbers
    ol > li:before {
        content: counter(mycounter);
        counter-increment: mycounter;
        position: absolute;
        top: 1em;
        left: -50px;
        width: 25px;
        height: 25px;
        line-height: 25px;
        text-align: center;
        font-size: 18px;
        font-weight: $font-weight-strong;
    }

    pre:empty,
    code:not(.hljs) {
        font-size: 1.1em;
    }

    ::selection {
        background: $text-on-light2;
        color: $light;
    }

    /*
     * Now we define things based on the type of slide (regular or impact, mostly)
     * For instance, everything color-related is defined in this part.
     */
    .slides {
        top: 0px;

        // For all slides (regular, title, impact)
        section:not([class^="stack"]) {
            // Vertical center alignment of slide content
            // Only works if revealjs is configured with «display: 'flex'»
            justify-content: center;
            flex-direction: column;
            padding-bottom: 0px;
        }

        // Regular slides
        section:not([class^="stack"]):not(.impact):not(.title) {
            background-color: $light;
            padding-left: $margin-left;
            padding-right: $margin-right;

            padding-top: $title-bar-offset; // half of the h2 bar height

            // Left alignment of slide content
            text-align: left;

            // Make sure "section" is the complete slide

            height: calc(100% - (#{$title-bar-offset}));
            width: calc(100% - (#{$margin-left} + #{$margin-right}));

            h2 {
                background-color: $dark;
                color: $text-on-dark;
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                padding: 0.5em;
                padding-bottom: 20px;
                text-align: left;
                z-index: 1;
            }

            b,
            strong {
                color: $colored-on-light;
            }

            // (selectors designed to not interfere with hljs)
            pre:empty,
            code:not(.hljs) {
                color: $text-on-light2;
            }

            a {
                color: $colored-on-light2;
            }

            a:hover {
                color: lighten($colored-on-light2, 10%);
            }

            h3,
            p,
            ul,
            ol,
            blockquote {
                color: $text-on-light;
            }

            // Items of ordered lists are numbers in squares,
            // hence we invert colors
            ol > li:before {
                color: $text-on-dark;
                background: $dark;
            }
        }

        // Title and impact slides (dark background, so we adapt everything)
        section.title,
        section.impact {
            background-color: $dark;
            height: 100%;
            padding-top: 0px;
            vertical-align: middle;
            text-align: center;

            h1,
            h2,
            h3,
            p,
            ul,
            ol {
                color: $text-on-dark;
            }

            strong,
            b,
            a,
            pre,
            code {
                color: $colored-on-dark;
            }

            a:hover {
                color: lighten($colored-on-dark, 15%);
            }

            // Items of ordered lists are numbers in squares,
            // hence we invert colors
            ol > li:before {
                color: $text-on-light;
                background: $light;
            }
        }
    }
} // end .reveal
